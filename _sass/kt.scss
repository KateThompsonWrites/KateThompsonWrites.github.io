$jumbotron-bg: transparent;
$jumbotron-padding: 3rem;
$font-family-sans-serif: 'Shadows Into Light Two', cursive;
$font-size-base: 1.5rem;

$nav-link-padding-y: 1rem;
$nav-link-padding-x: 2rem;
$navbar-nav-link-padding-x: $nav-link-padding-x;
$navbar-padding-y: 0;

@import "bootstrap/bootstrap";

html {
  background: #f8f8f8;
}

footer, body {
  max-width: 1600px;
  margin: 0 auto;
}

body {
  min-height: 100vh;
  border: 1px solid #f0f0f0;
  box-shadow: 0 0 2vw rgba(0,0,0, 0.05)
}

#contentWrapper {
  margin-top: 80px;
}

.jumbotron {
  margin-bottom:0;
  position: relative;
  overflow: hidden;

  @include media-breakpoint-down(sm) {
    min-height: 17rem;
    padding: 1rem 0 0;
  }

  h1 {
    z-index: 1;
    position: relative;
    text-align: center;
    @extend h2;

    @include media-breakpoint-up(md) {
      // cant @extend .display-4, so have to re-implement
      @include font-size($display4-size);
      font-weight: $display4-weight;
      line-height: $display-line-height;
    }
    a {
      color: $body-color;
      &:hover {
        text-decoration: none;
      }
    }
  }
  .background {
    img {
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      object-fit: cover;
      z-index: 0;
    }
  }

  #dandelion {
    img {
      position: absolute;
      $dandelion-opacity: 0.3;
      $dandelion-offset-y: -19px;
      &.flower {
        bottom: $dandelion-offset-y;
        height: 200px;
        opacity: $dandelion-opacity;
        z-index: 2;
        transform-origin: bottom;
        transform: scale(0.7);
        left: 10px;
        @include media-breakpoint-up(md) {
          transform: scale(1);
          left: 50px;
        }
      }
      &.seed {
        $seed-start-rotation: 25deg;
        left: 61px;
        bottom: 96px + $dandelion-offset-y;
        height: 40px;
        opacity: $dandelion-opacity;
        transform: rotate($seed-start-rotation) scale(0.6);
        z-index: 4;
        @include media-breakpoint-up(md) {
          left: 107px;
          bottom: 145px + $dandelion-offset-y;
          transform: rotate($seed-start-rotation);
        }

        $dist: 100vw; // @TODO - 100%? calc width?
        &.seed-animated {
          z-index: 3;
          opacity: 0;

          $seeds: 15;
          $seed-animation-duration: 15s;

          $seed-animation-y-min: -120px;
          $seed-animation-y-max:   20px;
          $seed-animation-y-range: $seed-animation-y-max - $seed-animation-y-min;

          $seed-animation-rotate-min: -90deg;
          $seed-animation-rotate-max:  180deg;
          $seed-animation-rotate-range: $seed-animation-rotate-max - $seed-animation-rotate-min;
          $seed-responsive-map: (
            xs: 0.6,
            md: 1.0
          );

          @for $i from 0 to $seeds {
            $seed-animation-name: #{"sa_" + $i};
            @each $key, $scale in $seed-responsive-map {
              @include media-breakpoint-up($key) {
                @keyframes #{$seed-animation-name} {
                  0% {
                    opacity: 0;
                  }
                  1% {
                    transform: translateX(0px)
                               translateY(0)
                               rotate($seed-start-rotation)
                               scale($scale);
                    opacity: $dandelion-opacity;
                  }

                  25% {
                    transform: translateX($dist / 4)
                               translateY(#{ $seed-animation-y-min + (random() * $seed-animation-y-range) })
                               rotate(#{ $seed-animation-rotate-min + (random() * $seed-animation-rotate-range) })
                               scale($scale);
                    opacity: $dandelion-opacity / 4 * 3;

                  }

                  100% {
                    transform: translateX($dist)
                               translateY(#{ $seed-animation-y-min + (random() * $seed-animation-y-range) })
                               rotate(#{ $seed-animation-rotate-min + (random() * $seed-animation-rotate-range) })
                               scale($scale);
                    opacity: 0
                  }
                }

                &:nth-of-type(#{$seeds + 'n'} + #{$i}) {
                  animation: $seed-animation-name $seed-animation-duration -#{$i * (($seed-animation-duration) / $seeds)} linear infinite;
                  filter: invert(0.5) sepia(1) saturate(5) hue-rotate( #{ $i * (360deg / $seeds) } );
                }
              }
            }
          }
        }
      }
    }
  }
}

footer, .navbar {
  background: rgba($dark, 0.1);
}

.navbar {
  position: absolute;
  width: 100%;
  bottom: 0;
  transition: all .35s ease;

  @include media-breakpoint-up(md) {
    padding: 0 80px;
  }
  .navbar-toggler {
    border: none;
    outline: none;
  }

  &.collapsing,
  &.collapse:not(.show) {
    display: block;
    height: 53px;
  }
  &.collapsing,
  &.show {
    @include media-breakpoint-down(md) {
      padding-top: 1rem;
    }
    background: $dark;
    z-index: 5;
    @extend .navbar-dark;
    .nav-item {
      .nav-link {
        color: $light;
      }
    }
  }
}
